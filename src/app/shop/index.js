import React,{useState,useEffect} from 'react';import { inject,observer,MobXProviderContext } from 'mobx-react'import classnames from 'classnames';import {API_SERVER} from '@/constant/apis'import { COMP_DESC,SHOP_LIST } from '@/constant/data'import s from './index.module.less';import bk_shop from '@/img/shop.jpg'import TitleLine from '@/component/TitleLine'const RenderHeader =(main,sub)=>(  <div className={s.hd}>    <label>{sub}</label>    <span>{main}</span>  </div>)const RenderSumary =(list)=>(  <div className={`${s.tab} line`}>    {list.map((item,i)=>      <div key={i} className={s.row}>        <span>{item.key}</span>        {!Array.isArray(item.val) && <span>{item.val}</span> }        {Array.isArray(item.val) &&           <div className={s.list}>            {item.val.map((o,j)=>              <div key={j} className={s.item}>                <span>{o.date}</span>                <span>{o.desc}</span>              </div>            )}          </div>        }      </div>    )}  </div>)const RenderShopDetail = (item)=>(  <div className={s.shopDetail}>    <div className={s.row}>      <label><em>住所</em></label>      <span>{item.addr}</span>    </div>    <div className={s.row}>      <label><em>Tel</em></label>      <span>{item.tel}</span>    </div>    {item.web &&     <div className={s.row}>      <label><em>Web</em></label>      <span>{item.web}</span>    </div>}    {item.sche &&     <div className={s.row}>      <label><em>営業時間</em></label>      <p>        {item.sche.map((o,j)=>           <span key={j}>{o}</span>        )}      </p>    </div>}  </div>)const RenderShopList = (list)=>(  <>  {list.map((item,i)=>    <div key={i} className={s.shopitem}>      <div className={s.img}>        <picture>          <source media="(min-width: 769px)" srcSet={item.img} />          <img src={`${item.img.split('.jpg')[0]}_sp.jpg`} />        </picture>      </div>      <div className={s.detail}>        <h1>{item.fname}<em>{item.sname}</em></h1>        <p className={s.desc}>{item.desc}</p>        <i>SHOP INFO</i>        {RenderShopDetail(item)}      </div>    </div>  )}  </>)const RenderMenu =(list,sel,setSel)=>(  <div className={s.menu}>    {list.map((item,i)=>      <span key={i}         className={classnames(s.area,{sel: sel===i})}         onClick={()=>setSel(i)}>{item.area}      </span>    )}  </div>)const RenderAreaList =(list,sel)=>(  <div className={s.arealist}>    {list.map((item,i)=>      <div key={i} className={s.areaitem}>        <label>{item.name}</label>        <div className={s.wrap}>          {RenderShopDetail(item)}        </div>      </div>    )}  </div>)const Shop = () => {  const { store } = React.useContext(MobXProviderContext)  const [sel,setSel] = useState(0)  let shopList = []  SHOP_LIST.map(item=>{    item.list.map(o=>{      if (o.img) {        shopList.push(o)      }    })  })    return (    <section>      <div className={s.shop}>        <div className={s.header}>          <div className={s.info }>            <h1>SASAWASHI Corporate</h1>            <span>会社概要</span>          </div>          <div className={s.bg}>            <picture>              <source media="(min-width: 769px)" srcSet="https://gigaplus.makeshop.jp/sasawashi/img/company/mv.jpg" />              <img src="https://gigaplus.makeshop.jp/sasawashi/img/company/mv_sp.jpg" />            </picture>          </div>        </div>        <div className={s.sect}>          {RenderHeader('会社概要','Corporate')}          {RenderSumary(COMP_DESC)}        </div>        <div className={s.sect}>          {RenderHeader('ショップ情報','Shop List')}          {RenderShopList(shopList)}        </div>        <div className={s.sect}>          <TitleLine title={'取り扱い店舗一覧'} type={'all'}/>          {RenderMenu(SHOP_LIST,sel,setSel)}                    <TitleLine title={SHOP_LIST[sel].area} type={'top'}/>          {RenderAreaList(SHOP_LIST[sel].list)}        </div>      </div>    </section>      )}export default  inject('store')(observer(Shop))